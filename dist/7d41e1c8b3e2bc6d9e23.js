function _classCallCheck(e,s){if(!(e instanceof s))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,s){for(var t=0;t<s.length;t++){var r=s[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,s,t){return s&&_defineProperties(e.prototype,s),t&&_defineProperties(e,t),e}import"core-js/modules/es.weak-map.js";import"core-js/modules/esnext.weak-map.delete-all.js";import"core-js/modules/es.object.to-string.js";import"core-js/modules/es.string.iterator.js";import"core-js/modules/es.array.iterator.js";import"core-js/modules/web.dom-collections.iterator.js";import"core-js/modules/es.set.js";import"core-js/modules/esnext.set.add-all.js";import"core-js/modules/esnext.set.delete-all.js";import"core-js/modules/esnext.set.difference.js";import"core-js/modules/esnext.set.every.js";import"core-js/modules/esnext.set.filter.js";import"core-js/modules/esnext.set.find.js";import"core-js/modules/esnext.set.intersection.js";import"core-js/modules/esnext.set.is-disjoint-from.js";import"core-js/modules/esnext.set.is-subset-of.js";import"core-js/modules/esnext.set.is-superset-of.js";import"core-js/modules/esnext.set.join.js";import"core-js/modules/esnext.set.map.js";import"core-js/modules/esnext.set.reduce.js";import"core-js/modules/esnext.set.some.js";import"core-js/modules/esnext.set.symmetric-difference.js";import"core-js/modules/esnext.set.union.js";import"core-js/modules/es.array.includes.js";import"core-js/modules/es.string.includes.js";import"core-js/modules/web.dom-collections.for-each.js";import"core-js/modules/es.array.from.js";import"core-js/modules/es.array.join.js";var _privateInstanceState=new WeakMap,HangmanLogic=function(){function e(s,t,r){_classCallCheck(this,e),Object.defineProperty(this,"difficulty",{value:r}),Object.defineProperty(this,"gameWord",{value:s}),Object.defineProperty(this,"numGuesses",{value:t}),_privateInstanceState.set(this,{gameWord:s.toLowerCase(),remainingGuesses:t,lettersGuessed:new Set})}return _createClass(e,[{key:"makeGuess",value:function(e){var s=e.toLowerCase(),t=_privateInstanceState.get(this),r=t.gameWord,o=t.lettersGuessed,i=(t.remainingGuesses,_privateInstanceState.get(this));o.add(s),r.includes(s)||decrementGuess(i)}},{key:"getState",get:function(){var e=_privateInstanceState.get(this),s=e.gameWord,t=e.lettersGuessed,r=e.remainingGuesses,o=lettersGuessedCorrectlyWord(s,t);return{initialGuesses:this.numGuesses,user:this.user,gameWord:s.toLowerCase(),wordSoFar:o.toLowerCase(),allLettersGuessed:convertSetToString(_privateInstanceState.get(this).lettersGuessed),remainingGuesses:r,difficulty:this.difficulty,isGameOver:this.gameWord.toLowerCase()===o||r<=0}}},{key:"isGuessValid",value:function(e){var s=e.toLowerCase(),t=_privateInstanceState.get(this).lettersGuessed;return isLetterAlreadyGuessed(t,s)?{isValid:!1,reason:"Letter has already been guessed"}:isGuessSingleLetter(s)?{isValid:!0}:{isValid:!1,reason:"You can only submit one letter at a time"}}}]),e}(),convertSetToString=function(e){var s="";return e.forEach((function(e){s+=e})),s},decrementGuess=function(e){return e.remainingGuesses--},isLetterAlreadyGuessed=function(e,s){return e.has(s)},isGuessSingleLetter=function(e){return 1===e.length},lettersGuessedCorrectlyWord=function(e,s){return e.toLowerCase(),Array.from(e,(function(e){return s.has(e)||" "===e?e:"*"})).join("")};export default HangmanLogic;